apply plugin: 'java'
apply plugin: 'eclipse'

repositories { 
		mavenCentral() 
}

dependencies { 
		testCompile "junit:junit:+" 
		testCompile "org.mockito:mockito-core:+" 
		testCompile "org.objenesis:objenesis:+"
}

sourceSets {
    main {
        java {
            srcDir 'src/java'
            srcDir 'src/test'
        }
    }
}

eclipse {
  project {
    natures 'org.eclipse.jdt.core.javanature', 'org.eclipse.pde.PluginNature'
  }
}

boolean nodeExists(node, name, attributes){
    for(child in node.children()){
		def sameName = name.equals(child.name())
		def sameAttributes = attributes.equals(child.attributes())
		if(sameName && sameAttributes){
			return true
		}
	}
	return false
}

def addNodeIfNecessary(node, name, attributes){
	if(!nodeExists(node, name, attributes)){
		node.appendNode(name, attributes)
	}
}

eclipse {
    classpath {
    	//Remove the container since it is added twice
   		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        file {
            withXml {
				addNodeIfNecessary(it.asNode(), 'classpathentry', [kind: 'con', path: 'org.eclipse.pde.core.requiredPlugins', exported: true])
            }
        }
    }
}



